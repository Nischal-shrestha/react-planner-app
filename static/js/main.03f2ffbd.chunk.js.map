{"version":3,"sources":["components/layout/SignedInLinks.jsx","store/actions/authActions.jsx","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/projects/CreateProject.jsx","store/actions/projectActions.jsx","App.js","serviceWorker.js","store/reducers/authReducer.jsx","store/reducers/projectReducer.jsx","store/reducers/rootReducer.jsx","config/firebase.jsx","index.js"],"names":["connect","dispatch","logOut","getState","_ref2","getFirebase","auth","signOut","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","href","profile","initials","SignedOutLinks","state","firebase","_ref","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleInputChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","trySignIn","authError","onSubmit","htmlFor","onChange","error","credentials","signInWithEmailAndPassword","catch","err","signIn","SignUp","firstName","lastName","trySignUp","console","log","user","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","signUp","CreateProject","create","history","push","authorId","add","objectSpread","Date","createProject","App","HashRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03f2ffbd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/project/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.logOut} href=\"#logout\">\r\n          Log Out\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_FAILED\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = user => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(user.email, user.password)\r\n      .then(res => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            initials: user.firstName[0] + user.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        return dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        return dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">SignUp</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\n\r\nconst Navbar = ({ auth, profile }) => {\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Planner\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\n\r\nconst Notifications = props => {\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            <li>Notification</li>\r\n            <li>Notification</li>\r\n            <li>Notification</li>\r\n            <li>Notification</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link to={\"/project/\" + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = props => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted By {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.trySignIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleInputChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.error,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    trySignIn: credentials => dispatch(signIn(credentials))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.trySignUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, error } = this.props;\r\n    console.log(this.props);\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleInputChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Register</button>\r\n            <div className=\"red-text center\">\r\n              {error ? <p>{error}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    error: state.auth.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    trySignUp: user => {\r\n      dispatch(signUp(user));\r\n    }\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.create(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Project Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleInputChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    create: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    //make async calls\r\n\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n\n            <Route path=\"/project/create\" component={CreateProject} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  error: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_FAILED\":\r\n      console.log(\"LOGIN FAILED\");\r\n      return {\r\n        ...state,\r\n        error: \"Login Failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"LOGIN SUCCESS\", state);\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      console.log(\"LOGOUT SUCCESS\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"SIGNUP SUCCESS\");\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"SIGNUP ERROR\", action.err.message);\r\n      return {\r\n        ...state,\r\n        error: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: 1, title: \"help me find peach\", content: \"blah blah blah blah\" },\r\n    { id: 2, title: \"Collect all the stars\", content: \"blah blah blah blah\" },\r\n    { id: 3, title: \"Ride with yoshi\", content: \"blah blah blah blah\" }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"CREATED PROJECT\");\r\n      console.log(action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"CREATE_PROJECT_ERROR\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\"; //core functionalities\r\nimport \"firebase/firestore\"; //database\r\nimport \"firebase/auth\"; //firebase authentication\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: \"AIzaSyA170uLZ_GY1GnOtFo37FAkhQb5GKYewAw\",\r\n  authDomain: \"ns-marioplan.firebaseapp.com\",\r\n  databaseURL: \"https://ns-marioplan.firebaseio.com\",\r\n  projectId: \"ns-marioplan\",\r\n  storageBucket: \"ns-marioplan.appspot.com\",\r\n  messagingSenderId: \"681017460549\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({\r\n  timestampsInSnapshots: true\r\n});\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport firebase from \"./config/firebase\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase),\n    reactReduxFirebase(firebase, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}